# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
    - uses: ./.github/actions/setup-postgresql
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 poetry
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings.
        flake8 . --count --exit-zero --max-complexity=10 --statistics
    - name: Install poetry environment
      run: |
        poetry install
    - name: Test with pytest
      run: |
        poetry run pytest --benchmark-group-by=fullfunc --benchmark-sort=fullname --benchmark-json benchmark_results.json
    # - name: Create runtime plots
    #   if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'}}
    #   run: |
    #     mkdir plots
    #     poetry run python .github/workflows/runtime_plots.py
    # - name: Upload plots to github artifacts
    #   if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'}}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: runtime-plots
    #     path: plots
    - name: Upload benchmark results to github artifacts
      if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'}}
      uses: actions/upload-artifact@v2
      with:
        name: benchmark-results-json
        path: benchmark_results.json
