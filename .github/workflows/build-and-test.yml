# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Build and test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Run flake8
        uses: TrueBrain/actions-flake8@v2.2

  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        os: [ubuntu-latest, macos-latest]
        include:
          # only run benchmarks for the following configuration...
          - os: ubuntu-latest
            python-version: 3.12
            benchmark: true

    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up Poetry
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Install Poetry environment
      run: |
        poetry install
        poetry run pip install pytest-cov
    - name: Test with pytest
      env:
        BENCHMARK: ${{ matrix.benchmark }}
        SQLALCHEMY_WARN_20: 1
      run: |
        PYTESTARGS="--cov --cov-report=xml"
        if [[ -z "${BENCHMARK}" ]]; then
          PYTESTARGS="${PYTESTARGS} --benchmark-skip"
        else
          PYTESTARGS="${PYTESTARGS} --benchmark-group-by=fullfunc --benchmark-sort=fullname --benchmark-json benchmark_results.json"
        fi
        poetry run pytest ${PYTESTARGS}
    # - name: Create runtime plots
    #   if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'}}
    #   run: |
    #     mkdir plots
    #     poetry run python .github/workflows/runtime_plots.py
    # - name: Upload plots to github artifacts
    #   if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'}}
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: runtime-plots
    #     path: plots
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
    - name: Upload benchmark results to github artifacts
      if: ${{ matrix.benchmark }}
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results-json
        path: benchmark_results.json
